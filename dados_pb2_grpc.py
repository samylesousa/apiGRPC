# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import dados_pb2 as dados__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in dados_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EnderecoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEndereco = channel.unary_unary(
                '/dados.EnderecoService/GetEndereco',
                request_serializer=dados__pb2.EnderecoRequest.SerializeToString,
                response_deserializer=dados__pb2.Endereco.FromString,
                _registered_method=True)
        self.CreateEndereco = channel.unary_unary(
                '/dados.EnderecoService/CreateEndereco',
                request_serializer=dados__pb2.CreateEnderecoRequest.SerializeToString,
                response_deserializer=dados__pb2.Endereco.FromString,
                _registered_method=True)
        self.ListEnderecos = channel.unary_unary(
                '/dados.EnderecoService/ListEnderecos',
                request_serializer=dados__pb2.ListEnderecoRequest.SerializeToString,
                response_deserializer=dados__pb2.EnderecoListResponse.FromString,
                _registered_method=True)
        self.UpdateEndereco = channel.unary_unary(
                '/dados.EnderecoService/UpdateEndereco',
                request_serializer=dados__pb2.Endereco.SerializeToString,
                response_deserializer=dados__pb2.Endereco.FromString,
                _registered_method=True)
        self.DeleteEndereco = channel.unary_unary(
                '/dados.EnderecoService/DeleteEndereco',
                request_serializer=dados__pb2.EnderecoRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class EnderecoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEndereco(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEndereco(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnderecos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEndereco(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEndereco(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnderecoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEndereco': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEndereco,
                    request_deserializer=dados__pb2.EnderecoRequest.FromString,
                    response_serializer=dados__pb2.Endereco.SerializeToString,
            ),
            'CreateEndereco': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEndereco,
                    request_deserializer=dados__pb2.CreateEnderecoRequest.FromString,
                    response_serializer=dados__pb2.Endereco.SerializeToString,
            ),
            'ListEnderecos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnderecos,
                    request_deserializer=dados__pb2.ListEnderecoRequest.FromString,
                    response_serializer=dados__pb2.EnderecoListResponse.SerializeToString,
            ),
            'UpdateEndereco': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEndereco,
                    request_deserializer=dados__pb2.Endereco.FromString,
                    response_serializer=dados__pb2.Endereco.SerializeToString,
            ),
            'DeleteEndereco': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEndereco,
                    request_deserializer=dados__pb2.EnderecoRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.EnderecoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.EnderecoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EnderecoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEndereco(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EnderecoService/GetEndereco',
            dados__pb2.EnderecoRequest.SerializeToString,
            dados__pb2.Endereco.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEndereco(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EnderecoService/CreateEndereco',
            dados__pb2.CreateEnderecoRequest.SerializeToString,
            dados__pb2.Endereco.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEnderecos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EnderecoService/ListEnderecos',
            dados__pb2.ListEnderecoRequest.SerializeToString,
            dados__pb2.EnderecoListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEndereco(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EnderecoService/UpdateEndereco',
            dados__pb2.Endereco.SerializeToString,
            dados__pb2.Endereco.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEndereco(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EnderecoService/DeleteEndereco',
            dados__pb2.EnderecoRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PlataformaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPlataforma = channel.unary_unary(
                '/dados.PlataformaService/GetPlataforma',
                request_serializer=dados__pb2.PlataformaRequest.SerializeToString,
                response_deserializer=dados__pb2.Plataforma.FromString,
                _registered_method=True)
        self.CreatePlataforma = channel.unary_unary(
                '/dados.PlataformaService/CreatePlataforma',
                request_serializer=dados__pb2.CreatePlataformaRequest.SerializeToString,
                response_deserializer=dados__pb2.Plataforma.FromString,
                _registered_method=True)
        self.ListPlataformas = channel.unary_unary(
                '/dados.PlataformaService/ListPlataformas',
                request_serializer=dados__pb2.ListPlataformasRequest.SerializeToString,
                response_deserializer=dados__pb2.PlataformaListResponse.FromString,
                _registered_method=True)
        self.UpdatePlataforma = channel.unary_unary(
                '/dados.PlataformaService/UpdatePlataforma',
                request_serializer=dados__pb2.Plataforma.SerializeToString,
                response_deserializer=dados__pb2.Plataforma.FromString,
                _registered_method=True)
        self.DeletePlataforma = channel.unary_unary(
                '/dados.PlataformaService/DeletePlataforma',
                request_serializer=dados__pb2.PlataformaRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class PlataformaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPlataforma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePlataforma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlataformas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlataforma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlataforma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlataformaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPlataforma': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlataforma,
                    request_deserializer=dados__pb2.PlataformaRequest.FromString,
                    response_serializer=dados__pb2.Plataforma.SerializeToString,
            ),
            'CreatePlataforma': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlataforma,
                    request_deserializer=dados__pb2.CreatePlataformaRequest.FromString,
                    response_serializer=dados__pb2.Plataforma.SerializeToString,
            ),
            'ListPlataformas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlataformas,
                    request_deserializer=dados__pb2.ListPlataformasRequest.FromString,
                    response_serializer=dados__pb2.PlataformaListResponse.SerializeToString,
            ),
            'UpdatePlataforma': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlataforma,
                    request_deserializer=dados__pb2.Plataforma.FromString,
                    response_serializer=dados__pb2.Plataforma.SerializeToString,
            ),
            'DeletePlataforma': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlataforma,
                    request_deserializer=dados__pb2.PlataformaRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.PlataformaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.PlataformaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlataformaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPlataforma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.PlataformaService/GetPlataforma',
            dados__pb2.PlataformaRequest.SerializeToString,
            dados__pb2.Plataforma.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePlataforma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.PlataformaService/CreatePlataforma',
            dados__pb2.CreatePlataformaRequest.SerializeToString,
            dados__pb2.Plataforma.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPlataformas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.PlataformaService/ListPlataformas',
            dados__pb2.ListPlataformasRequest.SerializeToString,
            dados__pb2.PlataformaListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlataforma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.PlataformaService/UpdatePlataforma',
            dados__pb2.Plataforma.SerializeToString,
            dados__pb2.Plataforma.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePlataforma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.PlataformaService/DeletePlataforma',
            dados__pb2.PlataformaRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProfessorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProfessor = channel.unary_unary(
                '/dados.ProfessorService/GetProfessor',
                request_serializer=dados__pb2.ProfessorRequest.SerializeToString,
                response_deserializer=dados__pb2.Professor.FromString,
                _registered_method=True)
        self.CreateProfessor = channel.unary_unary(
                '/dados.ProfessorService/CreateProfessor',
                request_serializer=dados__pb2.CreateProfessorRequest.SerializeToString,
                response_deserializer=dados__pb2.Professor.FromString,
                _registered_method=True)
        self.ListProfessores = channel.unary_unary(
                '/dados.ProfessorService/ListProfessores',
                request_serializer=dados__pb2.ListProfessoreRequest.SerializeToString,
                response_deserializer=dados__pb2.ProfessorListResponse.FromString,
                _registered_method=True)
        self.UpdateProfessor = channel.unary_unary(
                '/dados.ProfessorService/UpdateProfessor',
                request_serializer=dados__pb2.Professor.SerializeToString,
                response_deserializer=dados__pb2.Professor.FromString,
                _registered_method=True)
        self.DeleteProfessor = channel.unary_unary(
                '/dados.ProfessorService/DeleteProfessor',
                request_serializer=dados__pb2.ProfessorRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class ProfessorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProfessor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProfessor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProfessores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfessor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProfessor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProfessorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProfessor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfessor,
                    request_deserializer=dados__pb2.ProfessorRequest.FromString,
                    response_serializer=dados__pb2.Professor.SerializeToString,
            ),
            'CreateProfessor': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProfessor,
                    request_deserializer=dados__pb2.CreateProfessorRequest.FromString,
                    response_serializer=dados__pb2.Professor.SerializeToString,
            ),
            'ListProfessores': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProfessores,
                    request_deserializer=dados__pb2.ListProfessoreRequest.FromString,
                    response_serializer=dados__pb2.ProfessorListResponse.SerializeToString,
            ),
            'UpdateProfessor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfessor,
                    request_deserializer=dados__pb2.Professor.FromString,
                    response_serializer=dados__pb2.Professor.SerializeToString,
            ),
            'DeleteProfessor': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProfessor,
                    request_deserializer=dados__pb2.ProfessorRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.ProfessorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.ProfessorService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProfessorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProfessor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.ProfessorService/GetProfessor',
            dados__pb2.ProfessorRequest.SerializeToString,
            dados__pb2.Professor.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProfessor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.ProfessorService/CreateProfessor',
            dados__pb2.CreateProfessorRequest.SerializeToString,
            dados__pb2.Professor.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProfessores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.ProfessorService/ListProfessores',
            dados__pb2.ListProfessoreRequest.SerializeToString,
            dados__pb2.ProfessorListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfessor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.ProfessorService/UpdateProfessor',
            dados__pb2.Professor.SerializeToString,
            dados__pb2.Professor.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProfessor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.ProfessorService/DeleteProfessor',
            dados__pb2.ProfessorRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class BolsaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBolsa = channel.unary_unary(
                '/dados.BolsaService/GetBolsa',
                request_serializer=dados__pb2.BolsaRequest.SerializeToString,
                response_deserializer=dados__pb2.Bolsa.FromString,
                _registered_method=True)
        self.CreateBolsa = channel.unary_unary(
                '/dados.BolsaService/CreateBolsa',
                request_serializer=dados__pb2.CreateBolsaRequest.SerializeToString,
                response_deserializer=dados__pb2.Bolsa.FromString,
                _registered_method=True)
        self.ListBolsas = channel.unary_unary(
                '/dados.BolsaService/ListBolsas',
                request_serializer=dados__pb2.ListBolsasRequest.SerializeToString,
                response_deserializer=dados__pb2.BolsaListResponse.FromString,
                _registered_method=True)
        self.UpdateBolsa = channel.unary_unary(
                '/dados.BolsaService/UpdateBolsa',
                request_serializer=dados__pb2.Bolsa.SerializeToString,
                response_deserializer=dados__pb2.Bolsa.FromString,
                _registered_method=True)
        self.DeleteBolsa = channel.unary_unary(
                '/dados.BolsaService/DeleteBolsa',
                request_serializer=dados__pb2.BolsaRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class BolsaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBolsa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBolsa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBolsas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBolsa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBolsa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BolsaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBolsa': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBolsa,
                    request_deserializer=dados__pb2.BolsaRequest.FromString,
                    response_serializer=dados__pb2.Bolsa.SerializeToString,
            ),
            'CreateBolsa': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBolsa,
                    request_deserializer=dados__pb2.CreateBolsaRequest.FromString,
                    response_serializer=dados__pb2.Bolsa.SerializeToString,
            ),
            'ListBolsas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBolsas,
                    request_deserializer=dados__pb2.ListBolsasRequest.FromString,
                    response_serializer=dados__pb2.BolsaListResponse.SerializeToString,
            ),
            'UpdateBolsa': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBolsa,
                    request_deserializer=dados__pb2.Bolsa.FromString,
                    response_serializer=dados__pb2.Bolsa.SerializeToString,
            ),
            'DeleteBolsa': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBolsa,
                    request_deserializer=dados__pb2.BolsaRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.BolsaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.BolsaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BolsaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBolsa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.BolsaService/GetBolsa',
            dados__pb2.BolsaRequest.SerializeToString,
            dados__pb2.Bolsa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBolsa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.BolsaService/CreateBolsa',
            dados__pb2.CreateBolsaRequest.SerializeToString,
            dados__pb2.Bolsa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBolsas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.BolsaService/ListBolsas',
            dados__pb2.ListBolsasRequest.SerializeToString,
            dados__pb2.BolsaListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBolsa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.BolsaService/UpdateBolsa',
            dados__pb2.Bolsa.SerializeToString,
            dados__pb2.Bolsa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBolsa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.BolsaService/DeleteBolsa',
            dados__pb2.BolsaRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class CursoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurso = channel.unary_unary(
                '/dados.CursoService/GetCurso',
                request_serializer=dados__pb2.CursoRequest.SerializeToString,
                response_deserializer=dados__pb2.Curso.FromString,
                _registered_method=True)
        self.CreateCurso = channel.unary_unary(
                '/dados.CursoService/CreateCurso',
                request_serializer=dados__pb2.CreateCursoRequest.SerializeToString,
                response_deserializer=dados__pb2.Curso.FromString,
                _registered_method=True)
        self.ListCursos = channel.unary_unary(
                '/dados.CursoService/ListCursos',
                request_serializer=dados__pb2.ListCursosRequest.SerializeToString,
                response_deserializer=dados__pb2.CursoListResponse.FromString,
                _registered_method=True)
        self.UpdateCurso = channel.unary_unary(
                '/dados.CursoService/UpdateCurso',
                request_serializer=dados__pb2.Curso.SerializeToString,
                response_deserializer=dados__pb2.Curso.FromString,
                _registered_method=True)
        self.DeleteCurso = channel.unary_unary(
                '/dados.CursoService/DeleteCurso',
                request_serializer=dados__pb2.CursoRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class CursoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCurso(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCurso(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCursos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCurso(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCurso(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CursoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurso': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurso,
                    request_deserializer=dados__pb2.CursoRequest.FromString,
                    response_serializer=dados__pb2.Curso.SerializeToString,
            ),
            'CreateCurso': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCurso,
                    request_deserializer=dados__pb2.CreateCursoRequest.FromString,
                    response_serializer=dados__pb2.Curso.SerializeToString,
            ),
            'ListCursos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCursos,
                    request_deserializer=dados__pb2.ListCursosRequest.FromString,
                    response_serializer=dados__pb2.CursoListResponse.SerializeToString,
            ),
            'UpdateCurso': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCurso,
                    request_deserializer=dados__pb2.Curso.FromString,
                    response_serializer=dados__pb2.Curso.SerializeToString,
            ),
            'DeleteCurso': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCurso,
                    request_deserializer=dados__pb2.CursoRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.CursoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.CursoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CursoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCurso(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.CursoService/GetCurso',
            dados__pb2.CursoRequest.SerializeToString,
            dados__pb2.Curso.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCurso(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.CursoService/CreateCurso',
            dados__pb2.CreateCursoRequest.SerializeToString,
            dados__pb2.Curso.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCursos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.CursoService/ListCursos',
            dados__pb2.ListCursosRequest.SerializeToString,
            dados__pb2.CursoListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCurso(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.CursoService/UpdateCurso',
            dados__pb2.Curso.SerializeToString,
            dados__pb2.Curso.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCurso(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.CursoService/DeleteCurso',
            dados__pb2.CursoRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class EmpresaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEmpresa = channel.unary_unary(
                '/dados.EmpresaService/GetEmpresa',
                request_serializer=dados__pb2.EmpresaRequest.SerializeToString,
                response_deserializer=dados__pb2.Empresa.FromString,
                _registered_method=True)
        self.CreateEmpresa = channel.unary_unary(
                '/dados.EmpresaService/CreateEmpresa',
                request_serializer=dados__pb2.CreateEmpresaRequest.SerializeToString,
                response_deserializer=dados__pb2.Empresa.FromString,
                _registered_method=True)
        self.ListEmpresas = channel.unary_unary(
                '/dados.EmpresaService/ListEmpresas',
                request_serializer=dados__pb2.ListEmpresasRequest.SerializeToString,
                response_deserializer=dados__pb2.EmpresaListResponse.FromString,
                _registered_method=True)
        self.UpdateEmpresa = channel.unary_unary(
                '/dados.EmpresaService/UpdateEmpresa',
                request_serializer=dados__pb2.Empresa.SerializeToString,
                response_deserializer=dados__pb2.Empresa.FromString,
                _registered_method=True)
        self.DeleteEmpresa = channel.unary_unary(
                '/dados.EmpresaService/DeleteEmpresa',
                request_serializer=dados__pb2.EmpresaRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class EmpresaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEmpresa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEmpresa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEmpresas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEmpresa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEmpresa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmpresaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEmpresa': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmpresa,
                    request_deserializer=dados__pb2.EmpresaRequest.FromString,
                    response_serializer=dados__pb2.Empresa.SerializeToString,
            ),
            'CreateEmpresa': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEmpresa,
                    request_deserializer=dados__pb2.CreateEmpresaRequest.FromString,
                    response_serializer=dados__pb2.Empresa.SerializeToString,
            ),
            'ListEmpresas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEmpresas,
                    request_deserializer=dados__pb2.ListEmpresasRequest.FromString,
                    response_serializer=dados__pb2.EmpresaListResponse.SerializeToString,
            ),
            'UpdateEmpresa': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEmpresa,
                    request_deserializer=dados__pb2.Empresa.FromString,
                    response_serializer=dados__pb2.Empresa.SerializeToString,
            ),
            'DeleteEmpresa': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEmpresa,
                    request_deserializer=dados__pb2.EmpresaRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.EmpresaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.EmpresaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EmpresaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEmpresa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EmpresaService/GetEmpresa',
            dados__pb2.EmpresaRequest.SerializeToString,
            dados__pb2.Empresa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEmpresa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EmpresaService/CreateEmpresa',
            dados__pb2.CreateEmpresaRequest.SerializeToString,
            dados__pb2.Empresa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEmpresas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EmpresaService/ListEmpresas',
            dados__pb2.ListEmpresasRequest.SerializeToString,
            dados__pb2.EmpresaListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEmpresa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EmpresaService/UpdateEmpresa',
            dados__pb2.Empresa.SerializeToString,
            dados__pb2.Empresa.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEmpresa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EmpresaService/DeleteEmpresa',
            dados__pb2.EmpresaRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class EstagioServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEstagio = channel.unary_unary(
                '/dados.EstagioService/GetEstagio',
                request_serializer=dados__pb2.EstagioRequest.SerializeToString,
                response_deserializer=dados__pb2.Estagio.FromString,
                _registered_method=True)
        self.CreateEstagio = channel.unary_unary(
                '/dados.EstagioService/CreateEstagio',
                request_serializer=dados__pb2.CreateEstagioRequest.SerializeToString,
                response_deserializer=dados__pb2.Estagio.FromString,
                _registered_method=True)
        self.ListEstagios = channel.unary_unary(
                '/dados.EstagioService/ListEstagios',
                request_serializer=dados__pb2.ListEstagioRequest.SerializeToString,
                response_deserializer=dados__pb2.EstagioListResponse.FromString,
                _registered_method=True)
        self.UpdateEstagio = channel.unary_unary(
                '/dados.EstagioService/UpdateEstagio',
                request_serializer=dados__pb2.Estagio.SerializeToString,
                response_deserializer=dados__pb2.Estagio.FromString,
                _registered_method=True)
        self.DeleteEstagio = channel.unary_unary(
                '/dados.EstagioService/DeleteEstagio',
                request_serializer=dados__pb2.EstagioRequest.SerializeToString,
                response_deserializer=dados__pb2.Empty.FromString,
                _registered_method=True)


class EstagioServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEstagio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEstagio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEstagios(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEstagio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEstagio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EstagioServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEstagio': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEstagio,
                    request_deserializer=dados__pb2.EstagioRequest.FromString,
                    response_serializer=dados__pb2.Estagio.SerializeToString,
            ),
            'CreateEstagio': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEstagio,
                    request_deserializer=dados__pb2.CreateEstagioRequest.FromString,
                    response_serializer=dados__pb2.Estagio.SerializeToString,
            ),
            'ListEstagios': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEstagios,
                    request_deserializer=dados__pb2.ListEstagioRequest.FromString,
                    response_serializer=dados__pb2.EstagioListResponse.SerializeToString,
            ),
            'UpdateEstagio': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEstagio,
                    request_deserializer=dados__pb2.Estagio.FromString,
                    response_serializer=dados__pb2.Estagio.SerializeToString,
            ),
            'DeleteEstagio': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEstagio,
                    request_deserializer=dados__pb2.EstagioRequest.FromString,
                    response_serializer=dados__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dados.EstagioService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dados.EstagioService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EstagioService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEstagio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EstagioService/GetEstagio',
            dados__pb2.EstagioRequest.SerializeToString,
            dados__pb2.Estagio.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEstagio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EstagioService/CreateEstagio',
            dados__pb2.CreateEstagioRequest.SerializeToString,
            dados__pb2.Estagio.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEstagios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EstagioService/ListEstagios',
            dados__pb2.ListEstagioRequest.SerializeToString,
            dados__pb2.EstagioListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEstagio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EstagioService/UpdateEstagio',
            dados__pb2.Estagio.SerializeToString,
            dados__pb2.Estagio.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEstagio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dados.EstagioService/DeleteEstagio',
            dados__pb2.EstagioRequest.SerializeToString,
            dados__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
